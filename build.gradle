buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {url 'https://repo.grails.org/grails/core'}
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

// Custom props sourced from gradle.properties
def appCode = xhAppCode,
    appName = xhAppName,
    appVersion = xhAppVersion,
    appBuild = findProperty('xhAppBuild') ?: 'UNKNOWN'

version appVersion
group 'io.xh'

apply plugin:'idea'
apply plugin:'war'
apply plugin:'org.grails.grails-web'
apply plugin:'org.grails.grails-gsp'

repositories {
    mavenLocal()
    mavenCentral()
    maven {url 'https://repo.grails.org/grails/core'}
    maven {url 'https://repo.xh.io/content/groups/public/'}
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

boolean inlineHoist = runHoistInline == 'true'
if (inlineHoist) {
    println "${appName}: running with Hoist Core INLINE...."
} else {
    println "${appName}: running with Hoist Core PACKAGED at v${hoistCoreVersion}...."
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"

    compile "org.grails.plugins:gsp"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"

    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"

    compile "org.springframework:spring-websocket"

    // For JWT token validation.
    compile "org.bitbucket.b_c:jose4j:0.7.2"

    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "mysql:mysql-connector-java:5.1.47"

    if (!inlineHoist) {
        // Include Hoist as versioned external dependency when building a WAR for release
        compile "io.xh:hoist-core:$hoistCoreVersion"
    }
}

// Avoid unexpected errors with overly-long classpath on Windows development machines.
grails {
    pathingJar = true
}

if (inlineHoist) {
    // Include Hoist as an inline plugin in multi-project mode when running in development
    grails {
        plugins {
            compile project(":hoist-core")
        }
    }
}

bootRun {
    systemProperties = System.properties
    jvmArgs = ["-Xmx1G"]
    addResources = true
}


//--------------------------------------------------
// Extensions to build.info (Hoist-Core requirement)
//--------------------------------------------------
buildProperties.doLast {
    File grailsBuildInfoFile = it.outputs.files.files.find { it.name == 'grails.build.info' }
    if(!grailsBuildInfoFile) return

    Properties properties = new Properties()
    grailsBuildInfoFile.withInputStream {properties.load(it)}
    properties.setProperty('info.xh.appCode', appCode)
    properties.setProperty('info.xh.appName', appName)
    properties.setProperty('info.xh.appBuild', appBuild)
    grailsBuildInfoFile.withOutputStream {properties.store(it, null)}
}
