server {
    server_name  localhost;
    listen 80;
    root   /usr/share/nginx/html;

    # Don't disclose version information in headers.
    server_tokens off;

    # Enable HTTP Strict Transport Security (HSTS).
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Restrict referrer info provided when navigating from this site to others.
    # This option a) sends full referrer info to same origin, b) sends only origin (base URL, no path) when cross origin, and c) only does (b) when destination HTTPS.
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy for Toolbox.
    #   - default from self.
    #   - scripts from self.
    #   - objects from self.
    #   - styles from self + allow unsafe-inline (styles are written inline to the DOM by FontAwesome - could investigate).
    #   - fonts from self + data URIs (bundling can inline).
    #   - images from self + blob (e.g., Highcharts img downloads) + data URIs (bundling can inline) + any https (for Toolbox news reader example + OAuth profile images - a more restrictive policy would likely be possible for other apps)
    #   - connect (fetch/WS) from self and *.xh.io (to support CORS calls for pref/config differs) + data: (to support chart exports)
    #   - frames limited to self + xh.io (both for frames hosted by TB and frames hosting TB). Supports login.xh.io iframe required by Auth0.
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src 'self' blob: data: https:; connect-src 'self' data: https://*.xh.io wss://*.xh.io; frame-src 'self' https://*.xh.io; frame-ancestors 'self' https://*.xh.io;" always;

    # Explicitly disable use of sensitive browser APIs that we don't require in this app and would not expect to be accessed or used.
    # Considered an additional security best-practice.
    add_header Permissions-Policy "camera=(), geolocation=(), microphone=(), payment=(), usb=()" always;

    # Enforce MIME-types as set by server responses, an additional security best-practice.
    add_header X-Content-Type-Options "nosniff" always;

    # Add legacy X-Frame-Options, covered by CSP but including for completeness.
    add_header X-Frame-Options SAMEORIGIN always;

    # Control DNS prefetching to prevent potential information leakage
    add_header X-DNS-Prefetch-Control "off" always;

    # Redirect root to platform-appropriate default client app - either app or mobile - via
    # $is_mobile var set by UA parsing in xh-nginx's `xh.conf`.
    location = / {
        if ($is_mobile) {
            return 302 https://$host/mobile/;
        }

        return 302 https://$host/app/;
    }

    # Entry points for all of this project's client apps, as built by webpack.
    # Keep the lists below in-sync with top-level entry-point files within `/client-app/src/apps`.
    location ~ ^/(?<app>admin|app|contact|fileManager|mobile|news|portfolio|recalls|todo)(?:/|$) {
        # Add trailing slash if not present. Use explicit redirect w/leading https as this nginx is
        # behind a load balancer and would otherwise redirect first to http, resulting in an excess
        # redirect as the load balancer then sends the browser *back* to https.
        rewrite ^/(?<app2>admin|app|contact|fileManager|mobile|news|portfolio|recalls|todo)$ https://$host/$app2/ permanent;

        # When at the correct path, check if the requested path exists as a file - if so, serve it.
        # If not, serve index.html - this allows app routing to work - e.g. /admin/general/config
        # will load (or stay at) /admin/index.html, letting the app handle the rest of the route.
        try_files $uri $uri/ /$app/index.html;

        # Set cache expiry as per $expires var set by xh-nginx's `xh.conf` - this will cache JS/CSS
        # resources indefinitely while ensuring that index.html is re-read every time.
        expires $expires;
    }

    # Proxy to Grails back-end, run within the same task on AWS ECS Fargate.
    location ^~ /api/ {
        proxy_pass http://localhost:8080/;
        include includes/xh-proxy.conf;

        # Set Cookie policy to enforce HTTPS via "Secure", but also allow cross-site access.
        # This supports accepting e.g. JSESSIONID from a remote Hoist app to allow Config Differ to continue to work.
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=None";

        # Explicitly disable caching for proxied API requests.
        expires epoch;
    }

    # Static JS/CSS/etc assets not matching a more specific entry-point selector above.
    location / {
        expires $expires;
    }

}
